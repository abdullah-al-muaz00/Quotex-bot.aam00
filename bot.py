import os
import requests
import threading
import time
from datetime import datetime
from dotenv import load_dotenv
import schedule

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")

MARKET_PAIRS = [
    "EUR/USD", "GBP/USD", "USD/JPY", "AUD/USD", "USD/CAD",
    "NZD/USD", "USD/CHF", "EUR/GBP", "EUR/JPY", "GBP/JPY"
]

def signal_message(pair, duration, accuracy):
    now = datetime.now().strftime("%Y-%m-%d %I:%M %p")
    msg = (
        "**__ЁЭСиЁЭСиЁЭС┤ ЁЭС╗ЁЭТУЁЭТВЁЭТЕЁЭТЖЁЭТУ__**\n"
        f"ЁЯУИ Market: {pair}\n"
        f"тП▒я╕П Duration: {duration}\n"
        f"ЁЯХТ Time: {now}\n"
        f"ЁЯОп Accuracy: {accuracy}%\n"
        "**__ЁЭСйЁЭТА ЁЭС┤ЁЭТЦЁЭТВЁЭТЫ__**"
    )
    return msg

def result_message(pair, status):
    now = datetime.now().strftime("%Y-%m-%d %I:%M %p")
    emoji = "тЬЕ WIN" if status == "WIN" else "тЭМ LOSS"
    msg = (
        "**__ЁЭСиЁЭСиЁЭС┤ ЁЭС╗ЁЭТУЁЭТВЁЭТЕЁЭТЖЁЭТУ__**\n"
        f"ЁЯПБ Result: {emoji}\n"
        f"ЁЯУИ Market: {pair}\n"
        f"ЁЯХТ Time: {now}"
    )
    return msg

def send_telegram_message(text):
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    payload = {
        "chat_id": CHAT_ID,
        "text": text,
        "parse_mode": "Markdown"
    }
    res = requests.post(url, data=payload)
    return res.status_code == 200

def send_signals():
    duration = "1 Minute"
    accuracy = 97  # ржПржЦрж╛ржирзЗ ржкрзНрж░ржпрж╝рзЛржЬржиржорждрзЛ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рждрзЗ ржкрж╛рж░рзЛ

    for pair in MARKET_PAIRS:
        sig_msg = signal_message(pair, duration, accuracy)
        send_telegram_message(sig_msg)
        time.sleep(3)  # ржЫрзЛржЯ ржмрж┐рж░рждрж┐
        # 1 ржорж┐ржирж┐ржЯ ржкрж░рзЗ рж░рзЗржЬрж╛рж▓рзНржЯ ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛ржирзЛ (ржПржЦрж╛ржирзЗ рж╕рж░рж▓рж╛ржпрж╝рж┐ржд WIN ржорзЗрж╕рзЗржЬ)
        res_msg = result_message(pair, "WIN")
        send_telegram_message(res_msg)
        time.sleep(177)  # ржорзЛржЯ 3 ржорж┐ржирж┐ржЯрзЗрж░ рж╣рж┐рж╕рж╛ржм

def run_schedule():
    schedule.every().day.at("10:00").do(send_signals)
    # ржкрзНрж░рждрж┐ржжрж┐ржи рж░рж╛ржд 3 ржЯрж╛ ржкрж░рзНржпржирзНржд ржЪрж╛рж▓рж╛рждрзЗ рж╣ржмрзЗ, рждрж╛ржЗ рж╢рзЗрж╖ рж╕ржорзЯ рж╕рзЗржЯ ржХрж░рзЛ
    # ржПржЦрж╛ржирзЗ ржжрзИржирж┐ржХ рж╢рзБрж░рзБ ржХрж░рж╛рж░ рж╕ржорзЯ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ, рждрзБржорж┐ ржЪрж╛ржЗрж▓рзЗ рж╕рзНрж▓рж╛ржЗржбрж╛рж░ ржорждрзЛ рж╕ржорзЯ ржжрж┐ржиред

    while True:
        schedule.run_pending()
        time.sleep(1)

def start_bot():
    thread = threading.Thread(target=run_schedule)
    thread.daemon = True
    thread.start()
